"use client";
import React, { useRef, Suspense, useEffect, useState } from 'react';
import { Canvas, useFrame} from '@react-three/fiber'
import { Environment, Html, OrbitControls, AccumulativeShadows, Decal, RandomizedLight, useTexture, Stage } from '@react-three/drei'
import { Loader } from '@react-three/drei'
import { useKey } from 'react-use';


const Page = () => {
  
  return (
    <>
       <p>PaperAnime Proto</p>
       <Canvas shadows dpr={[1, 2]} camera={{ position: [-5, 5.5, 5], fov: 40 }}>
          <Stage preset="rembrandt" intensity={1}  environment="city">
            <Suspense fallback={null}>
              <Paper />
            </Suspense>
          </Stage>
          <OrbitControls  makeDefault  minPolarAngle={0} maxPolarAngle={Math.PI / 2} />
      </Canvas>
    </>
  )
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    Cube001: THREE.Mesh;
    Plane001: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];

};

type ActionName = "CubeAction" | "Cube.001Action" | "Key.001Action.001";
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

function Paper(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/PaperRoller.gltf"
  ) as GLTFResult;
  const { actions, clips } = useAnimations(animations, group);

  const [count, set] = useState(0)

  useEffect(() => {
    actions['Key.001Action.001'].reset().play().paused = true
    console.log(actions['Key.001Action.001'])
  }, [])


  const press = (event) => {
    set(() => (count + 1))
    actions['Key.001Action.001'].getMixer().update(count)
  }
  
  useKey("ArrowRight", press, { event: 'keydown' });

  useFrame((state, delta) => {
    actions['Key.001Action.001'].time
  })
  
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Cube"
          geometry={nodes.Cube.geometry}
          material={nodes.Cube.material}
          position={[-3, 0, 0]}
          scale={[5, 1, 1]}
        >
          <mesh
            name="Cube001"
            geometry={nodes.Cube001.geometry}
            material={nodes.Cube001.material}
            position={[0, 0.7, 1.04]}
            scale={[0.22, 1, 1]}
          />
          <mesh
            name="Plane001"
            geometry={nodes.Plane001.geometry}
            material={materials.Material}
            morphTargetDictionary={nodes.Plane001.morphTargetDictionary}
            morphTargetInfluences={nodes.Plane001.morphTargetInfluences}
            position={[-0.47, 0, 0]}
            scale={[0.2, 1, 1]}
          />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/PaperRoller.gltf");

export default Page
